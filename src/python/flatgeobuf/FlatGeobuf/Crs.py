# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatGeobuf

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Crs(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Crs()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCrs(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Crs
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Crs
    def Org(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Crs
    def Code(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Crs
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Crs
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Crs
    def Wkt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Crs
    def CodeString(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def CrsStart(builder): builder.StartObject(6)
def Start(builder):
    return CrsStart(builder)
def CrsAddOrg(builder, org): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(org), 0)
def AddOrg(builder, org):
    return CrsAddOrg(builder, org)
def CrsAddCode(builder, code): builder.PrependInt32Slot(1, code, 0)
def AddCode(builder, code):
    return CrsAddCode(builder, code)
def CrsAddName(builder, name): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def AddName(builder, name):
    return CrsAddName(builder, name)
def CrsAddDescription(builder, description): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)
def AddDescription(builder, description):
    return CrsAddDescription(builder, description)
def CrsAddWkt(builder, wkt): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(wkt), 0)
def AddWkt(builder, wkt):
    return CrsAddWkt(builder, wkt)
def CrsAddCodeString(builder, codeString): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(codeString), 0)
def AddCodeString(builder, codeString):
    return CrsAddCodeString(builder, codeString)
def CrsEnd(builder): return builder.EndObject()
def End(builder):
    return CrsEnd(builder)